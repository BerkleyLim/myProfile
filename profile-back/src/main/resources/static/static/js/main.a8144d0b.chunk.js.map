{"version":3,"sources":["image/project/Interior.jpg","image/project/MusicStyle.png","image/project/Chanel.jpg","components/common/HeaderComponent.jsx","components/common/FooterComponent.jsx","service/IntroductionService.js","components/introduction/IntroductionComponent.jsx","components/introduction/IntroductionFormComponent.jsx","service/CareerService.js","service/SkillService.js","components/career/CareerComponent.jsx","components/career/CareerFormComponent.jsx","components/career/SkillFormComponent.jsx","service/ProjectService.js","components/project/ProjectComponentSample.jsx","components/AppComponent.jsx","components/Portal.jsx","components/ModalComponent.jsx","components/together/TogetherComponent.jsx","service/LoginService.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderComponent","props","navigate","useNavigate","movePage","manu","handleLogoutClick","onLogout","document","location","reload","searchMenu","keyword","data","onLogin","react_default","a","createElement","className","aria-current","href","onClick","class","id","type","placeholder","aria-label","getElementById","value","index_es","icon","faPrint","isLogin","Fragment","FooterComponent","API_BASE_URI","service_IntroductionService","axios","get","ino","introduction","post","headers","Content-Type","put","delete","then","res","status","alert","catch","error","IntroductionFormComponent","_useState","useState","_useState2","Object","slicedToArray","introductions","setIntroductions","useEffect","IntroductionService","getIntroduction","console","log","map","title","contents","concat","deleteIntroduction","ContentAddButton","styled","button","_templateObject","taggedTemplateLiteral","param","useParams","setIno","_useState3","_useState4","setTitle","_useState5","_useState6","setContents","_useState7","_useState8","viewNumber","setViewNumber","getOneIntroduction","JSON","stringify","showManu","IntroductionFormComponent_ContentAddButton","event","preventDefault","Introduction","createIntroduction","updateIntroduction","name","onChange","target","ContentTextArea","IntroductionFormComponent_templateObject","textarea","_templateObject2","service_CareerService","cno","career","service_SkillService","category","no","skill","CareerComponent","careers","setCareers","bigSkills","setBigSkills","mediumSkills","setMediumSkills","smallSkills","setSmallSkills","bigNumber","CareerService","getCareer","SkillService","getSkill","skillAdd","rootNo","skillUpdate","skillDelete","deleteSkill","startDate","endDate","detail","deleteCareer","CareerComponent_ContentAddButton","bigSkill","mediumSkill","bigSkill_no","smallSkill","mediumSkill_no","CareerComponent_templateObject","CareerFormComponent","setCno","setStartDate","setEndDate","setDetail","getOneCareer","CareerFormComponent_ContentAddButton","Career","createCareer","updateCareer","CareerFormComponent_templateObject","CareerFormComponent_templateObject2","SkillFormComponent","setNo","skills","setSkills","details","setDetails","getOneSkill","SkillFormComponent_ContentAddButton","Skill","createSkill","updateSkill","SkillFormComponent_ContentTextArea","SkillFormComponent_templateObject","SkillFormComponent_templateObject2","pno","project","ProjectComponentSample","src","alt","p_Interior","p_Chanel","p_MusicStyle","Component","AppComponent","content","setContent","contenteditable","Portal","_ref","children","elementId","rootElement","useMemo","createPortal","CloseButton","faTimes","ModalComponent","visible","onClose","maskClosable","closable","body","style","cssText","window","scrollY","top","scrollTo","parseInt","ModalOverlay","ModalWrapper","tabIndex","e","currentTarget","ModalInner","ModalComponent_CloseButton","div","ModalComponent_templateObject","ModalComponent_templateObject2","_templateObject3","TogetherComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openModal","setState","modalVisible","closeModal","state","together","scope","service_LoginService","Member","mno","password","response","sessionStorage","setItem","removeItem","App","react","react_router_dom","getItem","LoginService","logout","login","react_router","path","element","IntroductionFormComponent_IntroductionFormComponent","ProjectComponentSample_ProjectComponentSample","TogetherComponent_TogetherComponent","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a8144d0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Interior.b92b85c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MusicStyle.2ca29cc1.png\";","module.exports = __webpack_public_path__ + \"static/media/Chanel.eb806564.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPrint } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// import { StaticRouter as NavLink } from \"react-router-dom/server\";\r\n// import LoginService from '../../service/LoginService'\r\n\r\nexport default function HeaderComponent(props) {\r\n  let navigate = useNavigate();\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.searchMenu = this.searchMenu.bind(this);\r\n  //   this.handleLoginClick = this.handleLoginClick.bind(this);\r\n  //   this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n  //   this.state = {\r\n  //     isLogin: this.props.isLogin,\r\n  //     onLogin: this.props.onLogin,\r\n  //     onLogout: this.props.onLogout\r\n  //   };\r\n  // }\r\n\r\n  // info_print() {\r\n  //   let initBody = document.body;\r\n  //   let hiddenBtn = document.querySelector('.print-button'); \r\n  //   let hiddenHeader = document.querySelector('#header');\r\n  //   let hiddenNavbar = document.querySelector('.navbar-device');\r\n  //   let hiddenClearfix = document.querySelector('.clearfix');\r\n\r\n  //   window.onbeforeprint = function () {\r\n  //     hiddenBtn.style.display = \"none\";\r\n  //     hiddenHeader.style.display = \"none\";\r\n  //     hiddenNavbar.style.display = \"none\";\r\n  //     hiddenClearfix.style.display = \"none\";\r\n  //     document.body = document.querySelector('.main-container');\r\n  //   }\r\n  //   window.onafterprint = function () {\r\n  //     hiddenBtn.style.display = \"block\";\r\n  //     hiddenHeader.style.display = \"block\";\r\n  //     hiddenNavbar.style.display = \"block\";\r\n  //     hiddenClearfix.style.display = \"block\";\r\n  //     document.body = initBody;\r\n  //   }\r\n  //   window.print();\r\n  // }\r\n\r\n  const movePage = (manu) => {\r\n    navigate(manu);\r\n  }\r\n\r\n  const handleLoginClick = (data) => {\r\n    // window.alert(data);\r\n    // let session = LoginService.login(data);\r\n    // alert(session);\r\n    props.onLogin(data);\r\n  }\r\n\r\n  const handleLogoutClick = () => {\r\n    props.onLogout();\r\n    document.location.reload();\r\n  }\r\n\r\n  const searchMenu = (keyword) => {\r\n    // console.log(this.state.loginStatus)\r\n    // window.alert(keyword);\r\n    if (keyword === \"1qa2wad234ewg67uy7t89ouy43ertdrfgedrtedr\") {\r\n      // 로그인\r\n      // this.setState({loginStatus: true});\r\n      handleLoginClick(keyword);\r\n      // this.props.onLogin();\r\n      // window.alert(this.state.loginStatus);\r\n    } else if (keyword === \"logout\") {\r\n      // 로그아웃\r\n      // this.setState({loginStatus: false});\r\n      handleLogoutClick();\r\n      // window.alert(this.state.loginStatus);\r\n    } else {\r\n      // 검색  \r\n\r\n    }\r\n    // window.alert(sessionStorage.length);  \r\n    // window.alert(this.state.isLogin);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='header'>\r\n      <div className='navbar navbar-expand-lg'>\r\n        <div className='nav container-fluid'>\r\n          <a className=\"nav nav-link\" aria-current=\"page\" href=\"http://35.90.180.8:8080\">My.Dev </a>\r\n          {/* <div className=\"collapse navbar-collapse\" id=\"navbarColor01\"> */}\r\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button> */}\r\n            <li className=\"nav-item\">\r\n              <button className=\"nav-link active\" onClick={() => movePage('/introduction')}>\r\n                소개\r\n              </button>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <button className=\"nav-link\" onClick={() => movePage('/career')}>\r\n                이력 및 기술\r\n              </button>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <button className=\"nav-link\" onClick={() => movePage('/project')}>\r\n                프로젝트\r\n              </button>\r\n            </li>\r\n            {/* <li class=\"nav-item\">\r\n                              <Link to=\"/together\" style={{ textDecoration: 'none' }}>\r\n                                <button className=\"nav-link\">\r\n                                  파트너모집\r\n                                </button>\r\n                              </Link>\r\n                            </li> */}\r\n            <form className=\"d-flex\">\r\n              <input id=\"search-keyword\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-light\" onClick={() => searchMenu(document.getElementById(\"search-keyword\").value)}>Search</button>\r\n            </form>\r\n            <li class=\"nav-item\">\r\n              <button className=\"nav-link\" onClick=\"info_print()\">\r\n                <FontAwesomeIcon icon={faPrint} />\r\n              </button>\r\n            </li>\r\n            {props.isLogin ?\r\n              // Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\r\n              <li className=\"nav-item\"><button className=\"btn\" onClick={handleLogoutClick}>로그아웃</button></li> :\r\n              <></>}\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default function FooterComponent() {\r\n    return (\r\n        <div class=\"footer\">\r\n            <div class=\"ft-content\">\r\n                <p class=\"ft-service\">\r\n                    <div>Github : <a href=\"https://github.com/BerkleyLim\">https://github.com/BerkleyLim</a></div>\r\n                    <div>E-Mail : <a href=\"mailto:berkleylim16@gmail.com\">berkleylim16@gmail.com</a></div>\r\n                    <div>Kakao : </div>\r\n                    <div>Follow : facebook, instagram</div>\r\n                </p>\r\n                <span class=\"ft-copy\">Copyright (c) 2021 MyDev., Ltd, All Rights Reserved</span>\r\n            </div>\r\n        </div>  \r\n    )  \r\n}\r\n// export default class FooterComponent extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {}\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div class=\"footer\">\r\n//                 <div class=\"ft-content\">\r\n//                     <p class=\"ft-service\">\r\n//                         <div>Github : <a href=\"https://github.com/BerkleyLim\">https://github.com/BerkleyLim</a></div>\r\n//                         <div>E-Mail : <a href=\"mailto:berkleylim16@gmail.com\">berkleylim16@gmail.com</a></div>\r\n//                         <div>Kakao : </div>\r\n//                         <div>Follow : facebook, instagram</div>\r\n//                     </p>\r\n//                     <span class=\"ft-copy\">Copyright (c) 2021 MyDev., Ltd, All Rights Reserved</span>\r\n//                 </div>\r\n//             </div>  \r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n","// import { noAuto } from '@fortawesome/fontawesome-svg-core';\r\nimport axios from 'axios'\r\n\r\nconst API_BASE_URI = \"http://35.90.180.8:8080/api/introduction\"\r\n\r\nclass IntroductionService {\r\n    getIntroduction() {\r\n        return axios.get(API_BASE_URI + \"/\");\r\n    }\r\n\r\n    getOneIntroduction(ino) {\r\n        return axios.get(API_BASE_URI + \"/\" + ino);\r\n    }\r\n\r\n    createIntroduction(introduction) {\r\n        const axiosConfig = {\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        return axios.post(API_BASE_URI + \"/\", introduction, axiosConfig);\r\n    }\r\n\r\n    updateIntroduction(ino, introduction) {\r\n        return axios.put(API_BASE_URI + \"/\" + ino, introduction)\r\n    }\r\n\r\n    deleteIntroduction(ino) {\r\n        return axios.delete(API_BASE_URI + \"/\" + ino)\r\n                    .then((res) => {\r\n                        if(res.status === 200) {\r\n                            alert(\"정상적으로 삭제 되었습니다\");\r\n                        }\r\n                        else {\r\n                            alert(\"삭제 오류\")\r\n                        }\r\n                    })\r\n                    .catch((error) => {alert(error)});\r\n    }\r\n\r\n}\r\n\r\nexport default new IntroductionService();","import React, { useEffect, useState } from 'react'\r\nimport \"./introduction.css\"\r\nimport IntroductionService from '../../service/IntroductionService'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\n\r\nexport default function IntroductionFormComponent(props) {\r\n    let [introductions, setIntroductions] = useState([]);\r\n    let navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        IntroductionService.getIntroduction().then((res) => {\r\n            setIntroductions(res.data)});\r\n        console.log(props.isLogin);\r\n    },[])\r\n\r\n\r\n    const addContents = () => {\r\n        // this.props.history.push(`/introduction-create:_create`);\r\n        navigate(`/introduction-form/_create`);\r\n        // this.props.useNavigate(`/introduction-create:_create`,\r\n        //             {replace:false});\r\n    }\r\n\r\n    const updateContents = (ino) => {\r\n        navigate(`/introduction-form/${ino}`);\r\n        // this.props.useNavigate(`/introduction-update:/${ino}`,\r\n        //             {replace:false});\r\n    }\r\n\r\n    const deleteContents = (ino) => {\r\n        // this.props.history.push(`/introduction-update/:ino`);\r\n        IntroductionService.deleteIntroduction(ino);\r\n        navigate(0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>소개</h1>\r\n            {\r\n                introductions.map(\r\n                    (introduction) => (\r\n                        <div id={introduction.ino} className=\"card\">\r\n                            <h5 className=\"card-header\">{introduction.title}</h5>\r\n                            <div className=\"card-body\">\r\n                                <span className=\"card-text\"> {introduction.contents}</span>\r\n                            </div>\r\n                            {props.isLogin ?\r\n                                <div className=\"row\">\r\n                                    <button className=\"col md-6\" onClick={() => updateContents(introduction.ino)} > 내용 수정 </button>\r\n                                    <button className=\"col md-6\" onClick={() => deleteContents(introduction.ino)} > 내용 삭제 </button>\r\n                                </div>\r\n                                : <></>\r\n                            }\r\n                        </div>\r\n                ))\r\n            }\r\n            {props.isLogin ?\r\n                <div>\r\n                    <ContentAddButton className=\"row\" onClick={addContents}> \r\n                    내용 추가 \r\n                    </ContentAddButton>\r\n                    {/* <Link to='/introduction-create:_create' style={{ textDecoration: 'none' }}>\r\n                    </Link> */}\r\n                </div>\r\n\r\n                : <></>\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ContentAddButton = styled.button`\r\n    padding: 5vh\r\n`\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"./introduction.css\"\r\nimport IntroductionService from '../../service/IntroductionService'\r\nimport styled from 'styled-components'\r\n\r\nexport default function IntroductionFormComponent(props) {\r\n    const param = useParams();\r\n    const navigate = useNavigate();\r\n  \r\n    let [ino, setIno] = useState(param.ino);\r\n    let [title, setTitle] = useState('');\r\n    let [contents, setContents] = useState('');\r\n    let [viewNumber, setViewNumber] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (ino === '_create') {\r\n            return;\r\n        } else {\r\n            IntroductionService.getOneIntroduction(ino)\r\n            .then((res) => {\r\n                let introduction = res.data;\r\n                console.log(\"introduction => \" + JSON.stringify(introduction));\r\n\r\n                setIno(introduction.ino);\r\n                setTitle(introduction.title);\r\n                setContents(introduction.contents);\r\n                setViewNumber(introduction.viewNumber);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n        }\r\n    }, []) \r\n\r\n    const changeTitleHandler = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const changeContentsHandler = (event) => {\r\n        setContents(event.target.value);\r\n    }\r\n\r\n    const createIntroduction = (event) => {\r\n        event.preventDefault();\r\n        let Introduction = {\r\n            title: title,\r\n            contents: contents\r\n        }\r\n        IntroductionService.createIntroduction(Introduction)\r\n            .then((res) => {\r\n                alert(\"success\");\r\n                navigate(-1);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const updateIntroduction = () => {\r\n        let Introduction = {\r\n            ino: ino,\r\n            title: title,\r\n            contents: contents,\r\n            viewNumber: viewNumber\r\n        }\r\n        IntroductionService.updateIntroduction(ino,Introduction)\r\n            .then((res) => {\r\n                alert(\"success\");\r\n                navigate(-1);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const cancelIntroduction = () => {\r\n        // alert(\"실패\");\r\n        // navigate(`/introduction`, {replace:false});\r\n        navigate(-1);\r\n    }\r\n\r\n\r\n\r\n    const showManu = (ino === '_create') ? \r\n    <ContentAddButton onClick={createIntroduction}>추가</ContentAddButton> \r\n    : <ContentAddButton onClick={updateIntroduction}>수정</ContentAddButton>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>소개</h1>\r\n            {\r\n                (props.isLogin) ?\r\n                    <div id={ino} className=\"card\">\r\n                        <input type=\"text\" placeholder=\"title\" name={title} className=\"card-header\"\r\n                            value={title} onChange={changeTitleHandler} />\r\n                        <ContentTextArea placeholder=\"contents\" name={contents} className=\"card-body\"\r\n                            value={contents} onChange={changeContentsHandler} />\r\n                        {showManu}\r\n                        <ContentAddButton onClick={cancelIntroduction}> 취소 </ContentAddButton>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ContentAddButton = styled.button`\r\n    padding: 5vh\r\n    \r\n`\r\n\r\nconst ContentTextArea = styled.textarea`\r\n    resize:none;\r\n    overflow:visible;\r\n    min-height: 40vh;\r\n`","import axios from 'axios'\r\n\r\nconst API_BASE_URI = \"http://35.90.180.8:8080/api\"\r\n\r\nclass CareerService {\r\n    // 이력사항\r\n    getCareer() {\r\n        return axios.get(API_BASE_URI + \"/career/\");\r\n    }\r\n    getOneCareer(cno) {\r\n        return axios.get(API_BASE_URI + \"/career/\" + cno);\r\n    }\r\n    createCareer(career) {\r\n        const axiosConfig = {\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        return axios.post(API_BASE_URI + \"/career/\", career, axiosConfig);\r\n    }\r\n\r\n    updateCareer(cno, career) {\r\n        return axios.put(API_BASE_URI + \"/career/\" + cno, career)\r\n    }\r\n\r\n    deleteCareer(cno) {\r\n        return axios.delete(API_BASE_URI + \"/career/\" + cno)\r\n                    .then((res) => {\r\n                        if(res.status === 200) {\r\n                            alert(\"정상적으로 삭제 되었습니다\");\r\n                        }\r\n                        else {\r\n                            alert(\"삭제 오류\")\r\n                        }\r\n                    })\r\n                    .catch((error) => {alert(error)});\r\n    }\r\n\r\n    // 기술\r\n    // getSkill() {\r\n    //     return axios.get(API_BASE_URI + \"/skill\");\r\n    // }\r\n\r\n}\r\n\r\nexport default new CareerService();","import axios from 'axios'\r\n\r\nconst API_BASE_URI = \"http://35.90.180.8:8080/api\"\r\n\r\nclass SkillService {\r\n    // 이력사항\r\n    getSkill(category) {\r\n        return axios.get(API_BASE_URI + \"/skill/\" + category + \"/\");\r\n    }\r\n    getOneSkill(no, category) {\r\n        return axios.get(API_BASE_URI + \"/skill/\" + category + \"/\" + no);\r\n    }\r\n    createSkill(skill, category) {\r\n        const axiosConfig = {\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        return axios.post(API_BASE_URI + \"/skill/\" + category + \"/\", skill, axiosConfig);\r\n    }\r\n\r\n    updateSkill(no, skill, category) {\r\n        return axios.put(API_BASE_URI + \"/skill/\"+ category + \"/\" + no, skill)\r\n    }\r\n\r\n    deleteSkill(no, category) {\r\n        return axios.delete(API_BASE_URI + \"/skill/\" + category + \"/\" + no)\r\n                    .then((res) => {\r\n                        if(res.status === 200) {\r\n                            alert(\"정상적으로 삭제 되었습니다\");\r\n                        }\r\n                        else {\r\n                            alert(\"삭제 오류\")\r\n                        }\r\n                    })\r\n                    .catch((error) => {alert(error)});\r\n    }\r\n\r\n}\r\n\r\nexport default new SkillService();","import React, { useState, useEffect } from 'react'\r\nimport './career.css'\r\nimport CareerService from '../../service/CareerService'\r\nimport SkillService from '../../service/SkillService'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\n\r\nexport default function CareerComponent(props) {\r\n    let navigate = useNavigate();\r\n    let [careers, setCareers] = useState([]);\r\n    let [bigSkills, setBigSkills] = useState([]);\r\n    let [mediumSkills, setMediumSkills] = useState([]);\r\n    let [smallSkills, setSmallSkills] = useState([]);\r\n\r\n    let bigNumber = 1;\r\n    useEffect(() => {\r\n        CareerService.getCareer().then((res) => {\r\n            setCareers(res.data);\r\n        }).catch((error) => alert(error));\r\n        SkillService.getSkill(\"big\").then((res) => {\r\n            // console.log(res.data[0]);\r\n            setBigSkills(res.data);\r\n            // alert(\"오류\")\r\n        }).catch((error) => alert(error));\r\n        SkillService.getSkill(\"medium\").then((res) => {\r\n            setMediumSkills(res.data);\r\n            // console.log(res.data[0]);\r\n            // alert(res.data);\r\n        }).catch((error) => alert(error));\r\n        SkillService.getSkill(\"small\").then((res) => {\r\n            setSmallSkills(res.data);\r\n            console.log(res.data[0]);\r\n            // alert(res.data);\r\n        }).catch((error) => alert(error));\r\n    }, []);\r\n\r\n    const careerAdd = () => {\r\n        navigate(`/career-form/_create`);\r\n    }\r\n\r\n    const careerUpload = (cno) => {\r\n        navigate(`/career-form/${cno}`);\r\n    }\r\n\r\n    const careerDelete = (cno) => {\r\n        CareerService.deleteCareer(cno);\r\n        navigate(0);\r\n    }\r\n\r\n    const skillAdd = (category, rootNo) => {\r\n        navigate(`/skill-form/${category}/_create/${rootNo}`);\r\n    }\r\n\r\n\r\n    const skillUpdate = (no, category, rootNo) => {\r\n        navigate(`/skill-form/${category}/${no}/${rootNo}`);\r\n        // alert(error);\r\n    }\r\n\r\n    const skillDelete = (no, category) => {\r\n        SkillService.deleteSkill(no, category);\r\n        navigate(0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>이력사항</h1>\r\n            <div className=\"career\">\r\n                {\r\n                    careers.map(\r\n                        (career) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">{career.startDate} ~ {career.endDate}</div>\r\n                                <div className=\"col\">{career.detail}</div>\r\n                                {props.isLogin ?\r\n                                    <div className=\"row\">\r\n                                        <button className=\"col md-6\" onClick={() => careerUpload(career.cno)} > 이력 수정 </button>\r\n                                        <button className=\"col md-6\" onClick={() => careerDelete(career.cno)} > 이력 삭제 </button>\r\n                                    </div>\r\n                                    : <></>\r\n                                }\r\n                            </div>\r\n                        ))\r\n                }\r\n                {props.isLogin ?\r\n                    <div>\r\n                        <ContentAddButton className=\"row\" onClick={careerAdd}>\r\n                            이력사항 추가\r\n                        </ContentAddButton>\r\n                    </div>\r\n\r\n                    : <></>\r\n                }\r\n            </div>\r\n\r\n\r\n            <h1>기술</h1>\r\n            {\r\n                bigSkills.map(\r\n                    (bigSkill) =>\r\n                        <pre>\r\n                            <h5>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\"> {bigNumber++}) {bigSkill.skill} </div>\r\n                                    <div className=\"col-md-9 detail\"> {bigSkill.detail} </div>\r\n                                </div>\r\n                                {/* {bigSkill.skill} - {bigSkill.detail} */}\r\n                            </h5>\r\n                            {props.isLogin ?\r\n                                <div className=\"row\">\r\n                                    <button className=\"col md-6\" onClick={() => skillUpdate(bigSkill.no, 'big', -1)} > 수정 </button>\r\n                                    <button className=\"col md-6\" onClick={() => skillDelete(bigSkill.no, 'big', -1)} > 삭제 </button>\r\n                                </div>\r\n                                : <></>\r\n                            }\r\n                            <blockquote>\r\n                                {\r\n                                    mediumSkills.map(\r\n                                        (mediumSkill) =>\r\n                                            <>\r\n                                                {\r\n                                                    (bigSkill.no == mediumSkill.bigSkill_no) ?\r\n                                                        <div className=\"d-flex flex-column bd-highlight mb-4\">\r\n                                                            <div className=\"p-5 bd-highlight\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"\"></div>\r\n                                                                    <div className=\"col-md-2\"> ■ {mediumSkill.skill} </div>\r\n                                                                    <div className=\"col-md-10 detail\"> {mediumSkill.detail} </div>\r\n                                                                </div>\r\n                                                                {/* {mediumSkill.skill} - {mediumSkill.detail} */}\r\n                                                                {props.isLogin ?\r\n                                                                    <div className=\"row\">\r\n                                                                        <button className=\"col md-6\" onClick={() => skillUpdate(mediumSkill.no, 'medium', bigSkill.no)} > 수정 </button>\r\n                                                                        <button className=\"col md-6\" onClick={() => skillDelete(mediumSkill.no, 'medium', bigSkill.no)} > 삭제 </button>\r\n                                                                    </div>\r\n                                                                    : <></>\r\n                                                                }\r\n                                                                <blockquote>\r\n                                                                    {\r\n                                                                        smallSkills.map(\r\n                                                                            (smallSkill) =>\r\n                                                                                <>\r\n                                                                                    {\r\n                                                                                        (mediumSkill.no == smallSkill.mediumSkill_no) ?\r\n                                                                                            <div className=\"d-flex flex-column bd-highlight mb-3\">\r\n                                                                                                <div className=\"p-5 bd-highlight\">\r\n                                                                                                    <div className=\"row\">\r\n                                                                                                        <div className=\"\"></div>\r\n                                                                                                        <div className=\"col-md-2\"> - {smallSkill.skill} </div>\r\n                                                                                                        <div className=\"col-md-9 text-break\"> {smallSkill.detail} </div>\r\n                                                                                                    </div>\r\n                                                                                                    {/* {smallSkill.skill} - {smallSkill.detail} */}\r\n                                                                                                </div>\r\n                                                                                                {\r\n                                                                                                    props.isLogin ?\r\n                                                                                                        <div className=\"row\">\r\n                                                                                                            <button className=\"col md-6\" onClick={() => skillUpdate(smallSkill.no, 'small', mediumSkill.no)} > 수정 </button>\r\n                                                                                                            <button className=\"col md-6\" onClick={() => skillDelete(smallSkill.no, 'small', mediumSkill.no)} > 삭제 </button>\r\n                                                                                                        </div>\r\n                                                                                                        : <></>\r\n                                                                                                }\r\n                                                                                            </div>\r\n                                                                                            : <></>\r\n                                                                                    }\r\n                                                                                </>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {props.isLogin ?\r\n                                                                        <div>\r\n                                                                            <ContentAddButton className=\"row\" onClick={() => skillAdd('small', mediumSkill.no)}>\r\n                                                                                {mediumSkill.skill} 기술 추가\r\n                                                                            </ContentAddButton>\r\n                                                                        </div>\r\n\r\n                                                                        : <></>\r\n                                                                    }\r\n                                                                </blockquote>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <></>\r\n                                                }\r\n                                            </>\r\n\r\n                                    )\r\n                                }\r\n\r\n                                {props.isLogin ?\r\n                                    <div>\r\n                                        <ContentAddButton className=\"row\" onClick={() => skillAdd('medium', bigSkill.no)}>\r\n                                            {bigSkill.skill} 기술 추가\r\n                                        </ContentAddButton>\r\n                                    </div>\r\n\r\n                                    : <></>\r\n                                }\r\n                            </blockquote>\r\n                        </pre>\r\n                )\r\n            }\r\n            {props.isLogin ?\r\n                <div>\r\n                    <ContentAddButton className=\"row\" onClick={() => skillAdd('big', -1)}>\r\n                        대분류 기술 추가\r\n                    </ContentAddButton>\r\n                </div>\r\n\r\n                : <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ContentAddButton = styled.button`\r\n    padding: 5vh\r\n`","import React, { useState, useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"./career.css\"\r\nimport CareerService from '../../service/CareerService'\r\nimport styled from 'styled-components'\r\n\r\nexport default function CareerFormComponent(props) {\r\n    const param = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    let [cno, setCno] = useState(param.cno);\r\n    let [startDate, setStartDate] = useState('');\r\n    let [endDate, setEndDate] = useState('');\r\n    let [detail, setDetail] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (cno === '_create') {\r\n            return;\r\n        } else {\r\n            CareerService.getOneCareer(cno)\r\n            .then((res) => {\r\n                let career = res.data;\r\n                console.log(\"Career => \" + JSON.stringify(career));\r\n\r\n                setCno(career.cno);\r\n                setStartDate(career.startDate);\r\n                setEndDate(career.endDate);\r\n                setDetail(career.detail);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n        }\r\n    }, []) \r\n\r\n    const changeStartDateHandler = (event) => {\r\n        setStartDate(event.target.value);\r\n    }\r\n\r\n    const changeEndDateHandler = (event) => {\r\n        setEndDate(event.target.value);\r\n    }\r\n\r\n    const changeDetailHandler = (event) => {\r\n        setDetail(event.target.value);\r\n    }\r\n\r\n    const createCareer = (event) => {\r\n        event.preventDefault();\r\n        let Career = {\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            detail: detail\r\n        }\r\n        CareerService.createCareer(Career)\r\n            .then((res) => {\r\n                alert(\"success\");\r\n                navigate(-1);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const updateCareer = () => {\r\n        let Career = {\r\n            cno: cno,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            detail: detail\r\n        }\r\n        CareerService.updateCareer(cno,Career)\r\n            .then((res) => {\r\n                alert(\"success\");\r\n                navigate(-1);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const cancelCareer = () => {\r\n        alert(cno);\r\n        // navigate(`/introduction`, {replace:false});\r\n        navigate(-1);\r\n    }\r\n\r\n\r\n\r\n    const showManu = (cno === '_create') ? \r\n    <ContentAddButton onClick={createCareer}>추가</ContentAddButton> \r\n    : <ContentAddButton onClick={updateCareer}>수정</ContentAddButton>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>소개</h1>\r\n            {\r\n                (props.isLogin) ?\r\n                    <div id={cno} className=\"card\">\r\n                        <input type=\"date\" placeholder=\"startDate\" name={startDate} className=\"card-header\"\r\n                            value={startDate} onChange={changeStartDateHandler} />\r\n                        <input type=\"date\" placeholder=\"endDate\" name={endDate} className=\"card-header\"\r\n                            value={endDate} onChange={changeEndDateHandler} />\r\n                        <input type=\"text\" placeholder=\"detail\" name={detail} className=\"card-header\"\r\n                            value={detail} onChange={changeDetailHandler} />\r\n                            {showManu}\r\n                        <ContentAddButton onClick={cancelCareer}> 취소 </ContentAddButton>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ContentAddButton = styled.button`\r\n    padding: 5vh\r\n    \r\n`\r\n\r\nconst ContentTextArea = styled.textarea`\r\n    resize:none;\r\n    overflow:visible;\r\n    min-height: 40vh;\r\n`","import React, { useState, useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"./career.css\"\r\nimport SkillService from '../../service/SkillService'\r\nimport styled from 'styled-components'\r\n\r\nexport default function SkillFormComponent(props) {\r\n    const param = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    let [no, setNo] = useState(param.no);\r\n    let [skills, setSkills] = useState('');\r\n    let [details, setDetails] = useState('');\r\n    let [rootNo, setRootNo] = useState(param.rootNo);\r\n\r\n    useEffect(() => {\r\n        if (no === '_create') {\r\n            // console.log(param);\r\n            return;\r\n        } else {\r\n            // console.log(param);\r\n            SkillService.getOneSkill(no,param.category)\r\n            .then((res) => {\r\n                let skill = res.data;\r\n                console.log(param.category + \"Skill => \" + JSON.stringify(skill));\r\n\r\n                setNo(skill.no)\r\n                setSkills(skill.skill);\r\n                setDetails(skill.detail);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n        }\r\n    }, []) \r\n\r\n    const changeSkillHandler = (event) => {\r\n        setSkills(event.target.value);\r\n    }\r\n\r\n    const changeDetailHandler = (event) => {\r\n        setDetails(event.target.value);\r\n    }\r\n\r\n    const createSkill = (event) => {\r\n        event.preventDefault();\r\n        let Skill;\r\n        if (rootNo < 0) {\r\n            Skill = {\r\n                skill : skills,\r\n                detail : details\r\n            }\r\n        } else {\r\n            if (param.category === 'medium') {\r\n                Skill = {\r\n                    skill : skills,\r\n                    detail : details,\r\n                    bigSkill_no : rootNo\r\n                }\r\n            } else {\r\n                Skill = {\r\n                    skill : skills,\r\n                    detail : details,\r\n                    mediumSkill_no : rootNo\r\n                }\r\n            }\r\n        }\r\n        SkillService.createSkill(Skill,param.category)\r\n            .then((res) => {\r\n                alert(\"success\");\r\n                navigate(-1);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const updateSkill = () => {\r\n        let Skill;\r\n        if (rootNo < 0) {\r\n            Skill = {\r\n                no: no,\r\n                skill : skills,\r\n                detail : details\r\n            }\r\n        } else {\r\n            if (param.category === 'medium') {\r\n                Skill = {\r\n                    no : no,\r\n                    skill : skills,\r\n                    detail : details,\r\n                    bigSkill_no : rootNo\r\n                }\r\n            } else {\r\n                Skill = {\r\n                    no: no,\r\n                    skill : skills,\r\n                    detail : details,\r\n                    mediumSkill_no : rootNo\r\n                }\r\n            }\r\n        }\r\n        SkillService.updateSkill(no,Skill,param.category)\r\n            .then((res) => {\r\n                alert(\"success\");\r\n                navigate(-1);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const cancelSkill = () => {\r\n        // navigate(`/introduction`, {replace:false});\r\n        navigate(-1);\r\n    }\r\n\r\n\r\n\r\n    const showManu = (no === '_create') ? \r\n    <ContentAddButton onClick={createSkill}>추가</ContentAddButton> \r\n    : <ContentAddButton onClick={updateSkill}>수정</ContentAddButton>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>소개</h1>\r\n            {\r\n                (props.isLogin) ?\r\n                    <div id={no} className=\"card\">\r\n                        <input type=\"text\" placeholder=\"skills\" name={skills} className=\"card-header\"\r\n                            value={skills} onChange={changeSkillHandler} />\r\n                        <ContentTextArea  placeholder=\"details\" name={details} className=\"card-header\"\r\n                            value={details} onChange={changeDetailHandler} />\r\n                            {showManu}\r\n                        <ContentAddButton onClick={cancelSkill}> 취소 </ContentAddButton>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ContentAddButton = styled.button`\r\n    padding: 5vh\r\n    \r\n`\r\n\r\nconst ContentTextArea = styled.textarea`\r\n    resize:none;\r\n    overflow:visible;\r\n    min-height: 40vh;\r\n`","// import { noAuto } from '@fortawesome/fontawesome-svg-core';\r\nimport axios from 'axios'\r\n\r\nconst API_BASE_URI = \"http://localhost:8080/api/project\"\r\n\r\nclass ProjectService {\r\n    getProject() {\r\n        return axios.get(API_BASE_URI + \"/\");\r\n    }\r\n\r\n    getOneProject(pno) {\r\n        return axios.get(API_BASE_URI + \"/\" + pno);\r\n    }\r\n\r\n    createProject(project) {\r\n        const axiosConfig = {\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        return axios.post(API_BASE_URI + \"/\", project, axiosConfig);\r\n    }\r\n\r\n    updateProject(pno, project) {\r\n        return axios.put(API_BASE_URI + \"/\" + pno, project)\r\n    }\r\n\r\n    deleteProject(pno) {\r\n        return axios.delete(API_BASE_URI + \"/\" + pno)\r\n                    .then((res) => {\r\n                        if(res.status === 200) {\r\n                            alert(\"정상적으로 삭제 되었습니다\");\r\n                        }\r\n                        else {\r\n                            alert(\"삭제 오류\")\r\n                        }\r\n                    })\r\n                    .catch((error) => {alert(error)});\r\n    }\r\n\r\n}\r\n\r\nexport default new ProjectService();","import React, { Component } from 'react'\r\nimport p_Interior from '../../image/project/Interior.jpg'\r\nimport p_MusicStyle from '../../image/project/MusicStyle.png'\r\nimport p_Chanel from '../../image/project/Chanel.jpg'\r\n\r\nexport default class ProjectComponentSample extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>운영 및 개발 진행 프로젝트</h1>\r\n                <div class=\"card mb-3\">\r\n                    <div class=\"row g-0\">\r\n                    <h3 class=\"card-title align-middle\">ClNewze</h3>\r\n                    <div class=\"col-md-4\">\r\n                        <img src=\"\" class=\"img-fluid rounded-start\" alt=\"...\"/>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card-body\">\r\n                        <p class=\"card-text\">개발기간 : 2022.03 ~ </p>\r\n                        <p class=\"card-text\">링크 : 개발중</p>\r\n                        <p class=\"card-text\">운영 시작 일 : </p>\r\n                        <p class=\"card-text\">사용기술 : Java, Spring boot, HTML, CSS, JavaScript, MySQL, My-Batis, Gradle, AWS, ReactJS</p>\r\n                        <p class=\"card-text\">프로젝트 인원 : 1명</p>\r\n                        <p class=\"card-text\">프로젝트 설명 : MusicStyle 프로젝트에서 리뉴얼한 형태의 프로그램, 개인 홈페이지를 직접 개발함과 동시에 React+Spring boot를 활용과 동시에 추가적인 기술을 습득 및 개선점을 보강하는 것이 목적으로 기존의 JQuery와 Spring boot 없이 진행한 프로젝트에서 Spring boot + React 형태의 개발을 진행 중이며 최종적인 목적으로 유지보수 편한 프로젝트형으로 리팩토링 진행중입니다. 또한 개발을 하면서 컨텐츠 개편에 예정중입니다.</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <h1>진행 이력 프로젝트</h1>\r\n                <div class=\"card mb-3\">\r\n                    <div class=\"row g-0\">\r\n                    <h3 class=\"card-title align-middle\">Interior</h3>\r\n                    <div class=\"col-md-4\">\r\n                        <img src={p_Interior} class=\"img-fluid rounded-start\" alt=\"...\" />\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card-body\">\r\n                        <p class=\"card-text\">개발기간 : 2018.06 ~ 2018.08</p>\r\n                        <p class=\"card-text\">링크 : 필요시 개방해드립니다.</p>\r\n                        <p class=\"card-text\">사용기술 : Java, Spring MVC, HTML, CSS, JavaScript, JQuery, MySQL, Aphach-Tomcat, My-Batis, Gradle, AWS, Handlebarsjs</p>\r\n                        <p class=\"card-text\">프로젝트 인원 : 6명 </p>\r\n                        <p class=\"card-text\">프로젝트 설명 : 지금까지 알려진 공방 사이트에서의 바탕으로 하여 소통 부재면이나, 공방 체험의 대한 컨텐츠 부족 등이 많다보니 그러한 것들 것 채우기 위해 직접 구현해 보았다.</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card mb-3\">\r\n                    <div class=\"row g-0\">\r\n                    <h3 class=\"card-title align-middle\">C사 부천 물류센터 스마트 팩토리 AGV 피킹 시스템 설치</h3>\r\n                    <div class=\"col-md-4\">\r\n                        <img src={p_Chanel} class=\"img-fluid rounded-start\" alt=\"...\"/>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card-body\">\r\n                        <p class=\"card-text\">개발기간 : 2019.08 ~ 2019.11</p>\r\n                        <p class=\"card-text\">링크 : -</p>\r\n                        <p class=\"card-text\">사용기술 : Java, Spring MVC, HTML, CSS, JavaScript, MySQL, nGinX, AutoCAD, SLAM, QR code</p>\r\n                        <p class=\"card-text\">프로젝트 인원 : 3명</p>\r\n                        <p class=\"card-text\">프로젝트 설명 : 웹과 로봇을 연동하는 프로젝트로 부천 물류 현장 센터에서 AGV를 이용하여 선반을 운반하여 물건을 가져오는 시스템 구축 S/W로 AGV 로봇을 제어하고 이에 필요한 자재들을 만들어 진행을 하였다. 개발 완료 후 인건비 감소 및 작업시간 단축의 효율을 보았다.</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card mb-3\">\r\n                    <div class=\"row g-0\">\r\n                    <h3 class=\"card-title align-middle\">MusicStyle</h3>\r\n                    <div class=\"col-md-4\">\r\n                        <img src={p_MusicStyle} class=\"img-fluid rounded-start\" alt=\"...\"/>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"card-body\">\r\n                        <p class=\"card-text\">개발기간 : 2018.10 ~ 개발중단</p>\r\n                        <p class=\"card-text\">링크 : 운영 중단</p>\r\n                        <p class=\"card-text\">사용기술 : Java, Spring MVC, HTML, CSS, JavaScript, MySQL, Aphach-Tomcat, My-Batis, Gradle, AWS, Handlebarsjs</p>\r\n                        <p class=\"card-text\">프로젝트 인원 : 1명</p>\r\n                        <p class=\"card-text\">프로젝트 설명 : 악기연주를 취미로 하거나 악기연주의 대한 전공을 하는 사람들에게 초점을 맞춰 음악적인 이야기와 악기연주를 위한 질 좋은 악보 제공, 자기가 연주한 것들과 취미생끼리 공유하기 위한 연습방법을 위해 영상을 통해 공유를 하고, 부가적인 옵션으로 음악으로 생계로 활동하고 있는 레스너 구하는 카테고리와 악기연주를 위한 연습실을 공유를 하여 악기를 연주하는 사람들을 위해 제작을 하였다. 보다 질 높은 프로젝트를 만들기 위해 리뉴얼 합니다.</p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function AppComponent(props) {\r\n    let [title, setTitle] = useState(<h3>ReactJS 및 Spring boot 주니어 개발자로 업체와 함께하고 싶습니다.</h3>);\r\n    let [content, setContent] = useState(data);\r\n\r\n    const update = () => {\r\n\r\n    }\r\n\r\n    const changeTitle = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const changeContent = (event) => {\r\n        setContent(event.target.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.isLogin ?\r\n                // Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\r\n                <div>\r\n                    {/* <h2>메인 공지</h2> */}\r\n                    <div>\r\n                        <input type='text' className='form-control' name={title} contenteditable value={title} onChange={changeTitle} />\r\n                        <textarea className='form-control' name={content} contenteditable value={content} onChange={changeContent} />\r\n                    </div>\r\n                    {/* <div>\r\n                        <button type='button' onClick={update}>Login</button>\r\n                    </div> */}\r\n                </div> :\r\n                <div>\r\n                    {/* <h2>메인 공지</h2> */}\r\n                    \r\n                    <div>\r\n                        <div className='form-control' >{title}</div>\r\n                        <div className='form-control' >{content}</div>\r\n                    </div>\r\n                    {/* {data} */}\r\n                    {/* <div>\r\n                        <button type='button' onClick={update}>Login</button>\r\n                    </div> */}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst data = (\r\n    <div className=\"\">\r\n        <div className=\"\">\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    <b>1. 주요 보유 기술</b>\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\" >  - </span>\r\n                <span className=\"\" ><b>React JS</b></span>\r\n                <span className=\"\" >\r\n                    : 간단한 게시판 구현, Axios를 활용하여 Back-End와 연동 가능, 최신 React v6 버전으로 활용한 신기술 Hook-Up을 통해 Component 작성 가능, react-router-dom의 라이브러리를 통한 경로 설정 가능\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\" >  - </span>\r\n                <span className=\"\" ><b>Spring boot</b></span>\r\n                <span className=\"\" >\r\n                    : Spring MVC의 관련된 기능에서 web, aop, Ioc의 간단한 수준에서 문법 작성 가능, 간단한 JPA 문법을 활용 하여 구현 가능, Back-End 역할로 Database 구현 연동 가능, 아직 미숙하지만 환경 설정은 참고를 통해서 설정 가능\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\" >  - </span>\r\n                <span className=\"\" ><b>My-SQL</b></span>\r\n                <span className=\"\" >\r\n                    : 간단한 문법(DDL, DML, DCL)을 작성하여 Database를 간단하게 활용 가능, DB Modeling 툴 중 하나인 MySql workbench 로 형상관리툴 사용 가능\r\n                </span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >​</span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" ><b>2. 요구 사항</b></span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >  </span>\r\n                <span className=\"\" ><i><b>(1) 사업 비전이 확실하고 튼튼한 회사</b></i></span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >\r\n                 사업 아이템 및 사업 환경에 적합한지 혹은 사업이라는게 매출을 확실하게 보장해주는 것을 말합니다. 즉, 성장 전망이 있고 성장하기 위해 함께 노력여부를 말하는 것입니다. IT 사업이란 클라이언트와의 네트워크 및 거래를 통해 매출을 하는 형태가 대부분입니다 고객과 고객간의 비즈니스를 통해 회사에 매출을 작용하는 요인인데 회사만의 API를 얼마나 보유하고 있으며 고객에게 배포할 API를 얼마나 개발을 하고 있으며 장기적으로 보았을때 고객의 니즈를 유지시키기 위해 주기적으로 업데이트가 잘 되고 있는지가 가장 큰 핵심입니다\r\n                </span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >\r\n                      또한 조직 구성원들간의 소통과 화합은 물론 조직 구성원들에게 일을 통해 좋은 경험을 쌓을 수 있는 환경이 마련이 되어있는지의 여부가 튼튼한 회사가 됩니다\r\n                </span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >\r\n                      이 점을 원하는 이유는 저의 인생 경험 중 하나인 조직생활에서 자리가 잡히지 않았고, 조직 구성원이 제대로 되지 않은 점, 사업 방향을 잘 못 짚은 점 등의 환경에서 보내왔었고 그 당시 저는 기술력이 부족한 상황에서 생활을 하였습니다. 그 환경 속에서 성장 시켜드리고 싶었고 어느 것을 학습을 해야하는지 갠적인 시간까지 내면서 보내면서 어떻게든 자리 잡을라고 제가 가지고 있는 기술들을 한계치를 끌어오르면서 생활하였습니다. 하지만 그 것이 더이상 불가능해지고 큰 성과없이 보내온 저로써 가슴 아픈 일들이 있었던점들의 대해 확고한 다짐하였습니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >​</span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" ><i><b>(2) 함께 구성원들이랑 도전을 해 보고 싶은 환경</b></i></span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >\r\n                      사람은 도전의 대해 두려워 하는 경향이 있습니다. 하지만 도전을 극복하지 못하면 사회에서 살아남기가 힘듭니다. 대부분 회사에서의 일처리는 메뉴얼을 작성하고 대부분 메뉴얼대로 행동을 하는 것을 원칙으로 하고 있는데 메뉴얼이라는 것 자체가 자리가 잡힌 상태를 말합니다. 하지만 IT업계에서는 기술이 빠르게 변화화고 있습니다. 즉 기술이라는 것이 유통기간이 있기 마련입니다. 마찬가지로 메뉴얼이 낡으면 제 기능을 하지 못합니다. 메뉴얼을 작성을 하기 위해 새로운 기술을 받아 드려야하고 재정비가 필요하기가 한번쯤 있습니다. 기존 JQuery와 JSP 방식을 React와 Spring boot 방식으로 나아가야한다면 기술을 받아드리며 메뉴얼을 습득하는 것이 원칙입니다. 저 또한 기본에 배운 방식 및 프로그래밍 학원에서 배운 내용들을 과감히 버리고 최신 기술 및 최근에 사람들이 점유하기 시작한 기술들을 독학으로 습득을 하여 시대에 덜 떨어지지 않게 유지하도록 도전하고 있습니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\" >\r\n                <span className=\"\" >\r\n                      다음으로는 자기 자신의 대한 도전이라는 것을 말하자면 실패를 겪고 자기자리가 후배들 아래까지 떨어지는 것을 느낄 때 대부분 사람들은 많은 절망을 겪을 것입니다. 그 동안의 노력이 수포로 돌아간다고 생각을 많이들 느끼는 편인데 여기서 도망을 치면 그동안 쌓아왔던 업적이 무너지기 때문에 본인이 가고자 하는 길을 선택하였으면 다시 올라설 수 있게 하는 것이 진짜 도전이라고 생각합니다. 저 또한 사회상활을 겪으면서 후배들보다 밑바닥으로 떨어진 경험이 있습니다. 그 동안 후배들보다 못한게 무언가 있었는지 절망스러운 적도 있었습니다. 저는 항상 도망 가고 싶은 생각이 많았습니다. 하지만 그동안 잡아준 사람에게 배신감을 느낄 수 있었기에 도망가지 않고 버틴적도 있습니다. 남들보다 더 열심히 하여 그나마 어느정도 대우를 받을 수 있기에 저는 끝마무리가 잘 마무리 될 때 까지 마칠 수 있었습니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">​</span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\"><i><b>(3) 퇴근 후 자기개발 보장</b></i></span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                      IT 업계에서는 퇴근 후 자기개발이 중요하다고 생각합니다. 취미생활 및 육아일 문화탐방 등 이런것도 있지만 새로운 기술을 연구하기 위해 자기개발은 보장해주면 보다 더 나은 생산성을 향상 시킬 수 있다고 생각합니다. 일의 대한 환경이 매우 바쁠 경우는 처리를 하는 것이 맞지만 그 이외의 시간은 자기만의 시간을 가지고 기술 연구를 하고 부족한 기술을 보완하는 시간을 가지고 싶습니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">​</span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\"><i><b>(4) 사람을 소모품처럼 대하지 않고 투자하는 마인드를 가진 경영진들</b></i></span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                      이부분을 중요하게 생각합니다. 대부분 사장님들의 마인드 입장에서는 회사는 매출을 올리기 위해 존재하는 것이다. 이것은 동의하는 부분입니다. 하지만 투자하는 마인드가 없으면 직원들은 회사를 손절하고 이직률을 높일 것이라고 생각합니다. 회사를 키우고 싶다면 경영진들의 마인드가 중요도가 높다고 보는데 사업주 혼자서 감당할 능력이 되시면 해당사항은 없지만 경영진들로만으로 손이 부족하거나 사업주의 부족한 능력을 메꿔줄 사람이 필요할 경우 소모품처럼 대하는 것이 아닌 투자하는 마인드로 잡으셨으면 하는 바램입니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    저의 입장에서 바라본 바로는 아직 경력이 없다시피 하기 때문에 회사 입장에서는 저의 대한 큰 기대를 하지 못합니다. 하지만 회사 경영진들께서 성장가능성을 바라보고 피드백 또한 많이 받으면서 많은 배움과 자기개발을 통해 한계치를 끌어올리면서 회사를 이끌어 가고 싶습니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">​</span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">​</span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\"><b>3. 희망연봉 : 3300만원 (퇴직금 포함시 3600만원) (협상 가능)</b></span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">  2023년 최저 시급 : 9,620원 / 주5일 8시간 근무 : 209H / 소정 근무시간 외 근무시간 (20% 이상 기준)</span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    비과세 (1개월 기준 식비 : 10만원, 교통비 : 20만원) 으로 기준으로 잡고 희망 연봉으로 정하였습니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                     ((2023년 최저시급) * (209시간) * (소정 근무시간 외 근무시간 20%이상) + 비과세 (식비 + 교통비)) * (12개월)\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    로 잡고 산출한 연봉은 3,300만원이고, 주말 근무 및 야근이 수시로 매우 잦을 경우 희망 연봉을 더 요구 가능합니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\"></span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">​</span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\"><b>4. 구인 양식</b></span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    아래와 같이 양식을 복사해서 berkleylim16@gmail.com 으로 이메일 자료 첨부해서 보내주시기 바랍니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    업체측에서 이력서 및 자기소개서가 필요시 따로 보내드리며 업체 양식 이력서가 있으시면 별도로 첨부해서 양식을 보내주시기 바랍니다.\r\n                </span>\r\n            </p>\r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    ---------------------------------------------------------------------------------------------------------------------\r\n                </span>\r\n            </p> \r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    (1) 업체명 : \r\n                </span>\r\n            </p> \r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    (2) 사업 내용 :  \r\n                </span>\r\n            </p> \r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    (3) 모집 포지션 :  \r\n                </span>\r\n            </p> \r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    (4) 회사 문화 :  \r\n                </span>\r\n            </p> \r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    (5) 구직자에게 요구 사항(인재상, 기술 기타 등등) :  \r\n                </span>\r\n            </p> \r\n            <p className=\"\">\r\n                <span className=\"\">\r\n                    (6) 기타 : \r\n                </span>\r\n            </p> \r\n        </div>\r\n    </div>\r\n)","import { useMemo } from 'react'\r\nimport { createPortal } from 'react-dom'\r\n\r\n// 모달 루트에서 하위 트리에서 랜더링 하게 만들기\r\nexport default function Portal ({children, elementId}){\r\n  const rootElement = useMemo(() => document.getElementById(elementId), [\r\n    elementId,\r\n  ])\r\n\r\n  return createPortal(children, rootElement);\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Portal from './Portal'\r\n\r\n// 참조 :  https://medium.com/@bestseob93/%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%AA%A8%EB%8B%AC-react-modal-%EB%A7%8C%EB%93%A4%EA%B8%B0-bd003458e9d\r\nconst CloseButton = () => <FontAwesomeIcon icon={faTimes} />;\r\nexport default function ModalComponent({ className, visible, children, onClose, maskClosable, closable }) {\r\n    // <i class=\"fas fa-times\"></i>\r\n    const onMaskClick = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            onClose(e)\r\n        }\r\n    }\r\n    const close = (e) => {\r\n        if (onClose) {\r\n            onClose(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n      document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`\r\n    \r\n      return () => {\r\n        const scrollY = document.body.style.top\r\n        document.body.style.cssText = `position: \"\"; top: \"\";`\r\n        window.scrollTo(0, parseInt(scrollY || '0') * -1)\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n      <Portal elementId=\"modal-root\">\r\n        <ModalOverlay visible={visible}/>\r\n        <ModalWrapper \r\n            className={className} \r\n            tabIndex=\"-1\" \r\n            visible={visible}\r\n            onClick={maskClosable ? onMaskClick : null}>\r\n\r\n            <ModalInner tabIndex=\"0\" className=\"modal-inner\">\r\n                {closable && <CloseButton className=\"modal-close\" onClick={close} />}\r\n                {children}\r\n            </ModalInner>\r\n        </ModalWrapper>\r\n      </Portal>\r\n    )\r\n}\r\n\r\n\r\n// ModalComponent.defaultProps = {\r\n//   closable: true,\r\n//   maskClosable: true,\r\n//   visible: false\r\n// }\r\n\r\n\r\n\r\nModalComponent.propTypes = {\r\n    visible: propTypes.bool,\r\n}\r\n\r\nconst ModalWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`\r\n\r\nconst ModalOverlay = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`\r\n\r\nconst ModalInner = styled.div`\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 800px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n  `\r\n  \r\n  // max-width: 1000px;\r\n\r\n","import React, { Component } from 'react'\r\nimport TogetherDetailComponent from './TogetherDetailComponent'\r\nimport './together.css'\r\nimport Modal from '../ModalComponent'\r\n\r\nexport default class TogetherComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.openModal = this.openModal.bind(this);\r\n        // this.closeModal = this.closeModal.bind(this);\r\n        this.state = {\r\n            together: [],\r\n            modalVisible: false,\r\n        }\r\n        this.detail = null;\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({modalVisible:true});\r\n\r\n    }\r\n    closeModal = () => {\r\n        this.setState({modalVisible:false});\r\n    }\r\n    \r\n\r\n    render() {\r\n        // 여기서 modal 열기 및 닫기 이벤트 컴포넌트 출력\r\n        return (\r\n            <div>\r\n                {/* <button onClick={this.openModal}>Open Modal</button>\r\n                {\r\n                    this.state.modalVisible && <Modal\r\n                    visible={this.state.modalVisible}\r\n                    closable={true}\r\n                    maskClosable={true}\r\n                    onClose={this.closeModal}>Hello\r\n                    \r\n                    <div className=\"title\"><h4>함께 할 IT 기업을 구합니다.</h4></div>\r\n                    <div className=\"content\">지원부분 1) Web programmer , 2) AGV Engineer, 3) WMS Developer</div> \r\n\r\n                    </Modal>\r\n                } */}\r\n                <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">번호</th>\r\n                            <th scope=\"col\">제목</th>\r\n                            <th scope=\"col\">조회수</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr onClick={this.openModal}>\r\n                            <th scope=\"row\">1</th>\r\n                            <td>함께 할 IT 기업을 구합니다.</td>\r\n                            <td>0</td>\r\n                        </tr>\r\n                        {\r\n                            this.state.modalVisible && <Modal\r\n                            visible={this.state.modalVisible}\r\n                            closable={true}\r\n                            maskClosable={true}\r\n                            onClose={this.closeModal}>\r\n                            \r\n                            <div className=\"title\"><h4>함께 할 IT 기업을 구합니다.</h4></div>\r\n                            <div className=\"content\">지원부분 1) Web programmer , 2) AGV Engineer, 3) WMS Developer</div> \r\n\r\n                            </Modal>\r\n                        }\r\n\r\n                        <tr onClick={this.openModal}>\r\n                            <th scope=\"row\">2</th>\r\n                            <td>Thornton</td>\r\n                            <td>4</td>\r\n                        </tr>\r\n                        {\r\n                            this.state.modalVisible && <Modal\r\n                            visible={this.state.modalVisible}\r\n                            closable={true}\r\n                            maskClosable={true}\r\n                            onClose={this.closeModal}>Hello\r\n                            \r\n                            <div className=\"title\"><h4>함께 할 IT 기업을 구합니다.</h4></div>\r\n                            <div className=\"content\">지원부분 1) Web programmer , 2) AGV Engineer, 3) WMS Developer</div> \r\n\r\n                            </Modal>\r\n                        }\r\n\r\n                        <tr onClick={this.openModal}>\r\n                            <th scope=\"row\">3</th>\r\n                            <td>Larry the Bird</td>\r\n                            <td>3</td>\r\n                        </tr>\r\n                        {\r\n                            this.state.modalVisible && <Modal\r\n                            visible={this.state.modalVisible}\r\n                            closable={true}\r\n                            maskClosable={true}\r\n                            onClose={this.closeModal}>Hello\r\n                            \r\n                            <div className=\"title\"><h4>함께 할 IT 기업을 구합니다.</h4></div>\r\n                            <div className=\"content\">지원부분 1) Web programmer , 2) AGV Engineer, 3) WMS Developer</div> \r\n\r\n                            </Modal>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport qs from 'query-string';\r\n\r\nconst API_BASE_URI =  \"http://35.90.180.8:8080/api/\"\r\n\r\nclass LoginService {\r\n    login(id){\r\n        const axiosConfig = {\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        // alert(typeof(id));\r\n        let Member = {\r\n            mno: 1,\r\n            id: id,\r\n            password: id,\r\n        };\r\n        return axios.post(API_BASE_URI + 'login', Member, axiosConfig)\r\n                    .then(response => {\r\n                        // alert(response.data);\r\n                        // alert(response.promise);\r\n                        // alert(typeof(response));\r\n                        sessionStorage.setItem('loginUser',response.data);\r\n                        // alert(sessionStorage.getItem('loginUser'))\r\n                    })\r\n                    .catch(error => alert(error));\r\n    }\r\n\r\n    logout(){\r\n        return axios.get(API_BASE_URI + \"logout\")\r\n            .then(() => sessionStorage.removeItem('loginUser'))\r\n            .catch(error => alert(error));\r\n    }\r\n}\r\n\r\nexport default new LoginService();","// import {BrowserRouter as Router, Switch, Route} from 'react-router-dom'; \nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport './App.css';\nimport './Corstest';\nimport HeaderComponent from './components/common/HeaderComponent'\nimport FooterComponent from './components/common/FooterComponent'\nimport IntroductionComponent from './components/introduction/IntroductionComponent'\nimport IntroductionFormComponent from './components/introduction/IntroductionFormComponent'\nimport CareerComponent from './components/career/CareerComponent'\nimport CareerFormComponent from './components/career/CareerFormComponent'\nimport SkillFormComponent from './components/career/SkillFormComponent'\nimport ProjectComponent from './components/project/ProjectComponent'\nimport ProjectComponentSample from './components/project/ProjectComponentSample'\nimport AppComponent from './components/AppComponent'\nimport TogetherComponent from './components/together/TogetherComponent'\nimport LoginService from './service/LoginService';\n// import IntroductionTestComponent from './components/introduction/IntroductionTestComponent'\n\n// 참조 : https://velog.io/@yaytomato/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%90%EC%84%9C-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\n// onLogin = (email, password) => {\n// \tconst data = {\n// \t\temail,\n// \t\tpassword,\n// \t};\n// \taxios.post('/login', data).then(response => {\n// \t\tconst { accessToken } = response.data;\n\n// \t\t// API 요청하는 콜마다 헤더에 accessToken 담아 보내도록 설정\n// \t\taxios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n// \t\t// accessToken을 localStorage, cookie 등에 저장하지 않는다!\n\n// \t}).catch(error => {\n// \t\t// ... 에러 처리\n// \t});\n// };\n\n// 참조 : \n// 1) https://velog.io/@chosh91/React-%EC%9E%90%EC%8B%9D-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-%EB%B6%80%EB%AA%A8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-state-%EB%B0%94%EA%BE%B8%EA%B8%B0\n// 2) https://velog.io/@exoluse/React-15.-%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EC%9E%90\n\n\n\nfunction App() {\n  // 프록시 설정 참조 : https://junhyunny.github.io/information/react/react-proxy/\n\n  let [isLogin, setIsLogin] = useState(false);\n\n\n  const onLogout = () => {\n    // sessionStorage 에 user_id 로 저장되어있는 아이템을 삭제한다.\n    // sessionStorage.removeItem('user_id')\n    console.log(isLogin);\n    LoginService.logout();\n    // document.location.href = '/';\n    // setIsLogin(false);\n    // App 으로 이동(새로고침)\n    // document.location.href = '/'\n  }\n\n  const onLogin = (data) => {\n    LoginService.login(data);\n    // if (sessionStorage.getItem('loginUser') == \"admin\") {\n    //   setIsLogin(true);\n    // } else {\n    //   setIsLogin(false);\n    // }\n    // setIsLogin(true);\n    // document.location.href = '/'\n  }\n\n  // setIsLogin((sessionStorage.getItem('loginUser') == \"admin\") ? true : false);\n\n  return (\n\n    // <div className='App'>\n    <Router>\n      <HeaderComponent isLogin={(sessionStorage.getItem('loginUser') === \"admin\") ? true : false} onLogout={onLogout} onLogin={onLogin} />\n\n      {/* <Corstest /> */}\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<AppComponent isLogin={(sessionStorage.getItem('loginUser') === \"admin\") ? true : false} />} />\n          <Route path=\"/introduction\" element={<IntroductionComponent isLogin={(sessionStorage.getItem('loginUser') === \"admin\") ? true : false} />} />\n          {/* <Route path=\"/introduction-test\" element={<IntroductionTestComponent isLogin={(sessionStorage.getItem('loginUser') === \"admin\") ? true : false} />} /> */}\n          <Route path=\"/introduction-form/:ino\" element={<IntroductionFormComponent isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false} />} />\n          <Route path=\"/career\" element={<CareerComponent isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false}/>} />\n          <Route path=\"/career-form/:cno\" element={<CareerFormComponent isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false} />} />\n          <Route path=\"/skill-form/:category/:no/:rootNo\" element={<SkillFormComponent isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false} />} />\n          {/* <Route path=\"/project\" element={<ProjectComponent isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false}/>} /> */}\n          <Route path=\"/project\" element={<ProjectComponentSample isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false}/>} />\n          <Route path=\"/together\" element={<TogetherComponent isLogin={(sessionStorage.getItem('loginUser') == \"admin\") ? true : false}/>} />\n        </Routes>\n      </div>\n\n      <FooterComponent />\n    </Router>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}